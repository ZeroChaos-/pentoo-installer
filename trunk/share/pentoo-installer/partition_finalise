#!/bin/bash
# This script is released under the GNU General Public License 3.0
# Check the COPYING file included with this distribution

# partition_finalise
# Creates filesystem, also with encryption, mounts the partitions
# parameters (required)
#  CONFIG_LIST: One string items of defined FSspec:
#    <device>:<mountpoint>:<filesystem>:<boot-flag>:<encryption>
#
# returns 0 on success
# returns $ERROR_CANCEL=64 on user cancel
# anything else is a real error
# reason: show_dialog() needs a way to exit "Cancel"
#
# writes menus and noise to STDERR

# location of other scripts to source
readonly SHAREDIR="$(dirname ${0})" || exit $?

# source partitioning commons
source "${SHAREDIR}"/partition_common.sh || exit $?

#####################
## begin execution ##

# check input
check_num_args "$(basename $0)" 1 $# || exit $?
CONFIG_LIST="${1}"
# reverse sort by mountpoint
CONFIG_LIST="$("${SHAREDIR}"/FSspec sort_reverse "${CONFIG_LIST}" 'mountpoint')" || exit $?

for CONFIG_ITEM in ${CONFIG_LIST}; do
	DEVICE="$("${SHAREDIR}"/FSspec parse "${CONFIG_ITEM}" 'device')" || exit $?
	FILESYSTEM="$("${SHAREDIR}"/FSspec parse "${CONFIG_ITEM}" 'filesystem')" || exit $?
	ENCRYPTION="$("${SHAREDIR}"/FSspec parse "${CONFIG_ITEM}" 'encryption')" || exit $?
	FORMAT="$("${SHAREDIR}"/FSspec parse "${CONFIG_ITEM}" 'format')" || exit $?
	# encrypted
	if [ "${ENCRYPTION}" -eq 1 ]; then
		# non-swap partition
		if [ "${FILESYSTEM}" != 'swap' ]; then

		# swap partition
		else
			return 255
			# [ "${FORMAT}" -eq 1 ] && mkswap "${DEVICE}" || return $?
		fi
	fi
done
